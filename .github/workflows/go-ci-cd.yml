name: Go CI/CD Pipeline

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]

env:
  IMAGE_NAME: "my-go-app"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Run linters
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          golangci-lint run ./...

      - name: Run tests
        run: go test -v ./...

  docker-publish:
    needs: test
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Verify tag trigger
        run: |
          echo "‚úî Job triggered by tag: $GITHUB_REF"
          if [[ ! "$GITHUB_REF" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::error::Tag format incorrect. Expected vX.Y.Z"
            exit 1
          fi

      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container

      - name: Debug Docker Hub credentials
        run: |
          echo "Docker Hub username: ${{ secrets.DOCKER_HUB_USERNAME }}"
          echo "Token starts with: ${DOCKER_HUB_TOKEN:0:4}..."  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤—ã—Ö 4 —Å–∏–º–≤–æ–ª–æ–≤ —Ç–æ–∫–µ–Ω–∞

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          # –£–±–µ—Ä–∏—Ç–µ ecr: auto –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —Ç–æ–ª—å–∫–æ Docker Hub

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "‚úî Extracted version: $VERSION"

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          labels: |
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify published images
        run: |
          echo " Docker images published successfully!"
          echo "--------------------------------------"
          echo " Docker Hub User: ${{ secrets.DOCKER_HUB_USERNAME }}"
          echo "üè∑ Image Tags:"
          echo "  - latest"
          echo "  - ${{ steps.version.outputs.version }}"
          echo ""
          echo "View on Docker Hub:"
          echo "https://hub.docker.com/r/${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}/tags"