name: Go CI/CD Pipeline

on:
  push:
    branches: [ "main", "feature/ci-cd-setup" ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: "my-go-app"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Run linters
        run: |
          echo "Installing linters..."
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          go install github.com/gordonklaus/ineffassign@latest

          echo "Running static analysis..."
          ineffassign ./...
          golangci-lint run ./... --enable=govet,unused,staticcheck
          echo "Linting completed"

      - name: Run tests
        run: |
          echo "Running tests..."
          go test -v ./...
          echo "Tests passed"

  docker-publish:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Print tag info
        run: |
          echo "Triggered by tag: $GITHUB_REF"
          echo "Image name: ${{ env.IMAGE_NAME }}"
          echo "This job runs only when triggered by a version tag (v*.*.*)"

      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Detected version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Will build and push images with this version"

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          labels: |
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.source=https://github.com/$GITHUB_REPOSITORY
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify push
        run: |
          echo "Successfully pushed Docker images:"
          echo "  - ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
          echo "  - ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}"
          echo "Image metadata:"
          echo "  - version: ${{ steps.version.outputs.version }}"
          echo "  - source: https://github.com/$GITHUB_REPOSITORY"
          echo "Docker publish completed successfully!"